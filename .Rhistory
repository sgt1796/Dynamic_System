libarary(shiny)
library(shiny)
list.files()
runApp("shiny")
?plotlyOutput
??plotlyOutput
library(shiny)
library(shinyjs)
library(plotly)
library(dplyr)
library(purrr)
library(RColorBrewer)
runApp("shiny")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sgt1796', token='EA36BBBE655CB0CAC6CCD50A8AF2CA53', secret='VjW4C1IRTddT37COUbGxARJuhElsK1ZqA7KF+Ifp')# Deploy the app from the Git repository
deployApp(appDir = "https://github.com/sgt1796/Dynamic_System/tree/main/Gingerbreadman/shiny",
appFiles = c("ui.R", "server.R"))
library(rsconnect)
rsconnect::setAccountInfo(name='sgt1796', token='EA36BBBE655CB0CAC6CCD50A8AF2CA53', secret='VjW4C1IRTddT37COUbGxARJuhElsK1ZqA7KF+Ifp')# Deploy the app from the Git repository
deployApp(appDir = "https://github.com/sgt1796/Dynamic_System/tree/main/Gingerbreadman/shiny",
appFiles = c("ui.R", "server.R"))
deployApp(appDir = "shiny",
appFiles = c("ui.R", "server.R"))
deployApp(appDir = "shiny",
appFiles = c("ui.R", "server.R"))
setwd("..")
getwd()
# Function to apply a list of mapping functions iteratively
iterate_mappings <- function(x0, y0, iterations, mappings) {
x <- x0
y <- y0
xpoints <- numeric(iterations)
ypoints <- numeric(iterations)
for (i in 1:iterations) {
mapping <- mappings[[i %% length(mappings) + 1]]
result <- mapping(x, y)
x <- result$x
y <- result$y
xpoints[i] <- x
ypoints[i] <- y
}
return(data.frame(x = xpoints, y = ypoints))
}
# Example mappings: Gingerbreadman map function
gingerbreadman <- function(x, y) {
xnew <- 1 - y + abs(x)
ynew <- x
return(list(x = xnew, y = ynew))
}
# Another example mapping: a simple rotation
rotation <- function(x, y) {
angle <- pi / 4
xnew <- x * cos(angle) - y * sin(angle)
ynew <- x * sin(angle) + y * cos(angle)
return(list(x = xnew, y = ynew))
}
# Initial values
x0 <- 0
y0 <- 0
iterations <- 1000
# List of mappings
mappings <- list(gingerbreadman, rotation)
# Apply the mappings
result <- iterate_mappings(x0, y0, iterations, mappings)
# Plot the result
library(ggplot2)
ggplot(result, aes(x = x, y = y)) +
geom_point(size = 0.5, alpha = 0.5) +
theme_minimal() +
ggtitle("Iterated Function System")
source("mappings.R")
